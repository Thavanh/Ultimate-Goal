package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.util.ElapsedTime;


@TeleOp(name="Drive_bot", group="Linear Opmode")
//@Disabled
public class Drive_bot extends LinearOpMode {

    // Declare OpMode members.
    private ElapsedTime runtime = new ElapsedTime( );
    private DcMotor leftDrive = null;
    //private DcMotor rightDrive = null;

    DcMotor leftdrive;
    DcMotor rightdrive;
    DcMotor centerMotor;
    DcMotor linearactuator;
    Servo gripper1;
    Servo gripper2;
    Servo capper;
    Servo Rotationservo;
    //double G1servoPosition = 1.0;
    //double G2servoPosition = 1.0;
    double Gripper1_Open = 0.44;
    double Gripper1_Closed = 0.32;
    double Gripper2_Open = 0.25;
    double Gripper2_Closed = 0.32;
    double capper_open = 0.69;
    double capper_closed = 0.40;


    @Override
    public void runOpMode() {
        telemetry.addData("Status", "Initialized");
        telemetry.update();

        leftdrive = hardwareMap.dcMotor.get("Motor_2");
        rightdrive = hardwareMap.dcMotor.get("Motor_0");
        centerMotor = hardwareMap.dcMotor.get("Motor_1");
        gripper1 = hardwareMap.servo.get("servo0");
        gripper2 = hardwareMap.servo.get("servo2");
        Rotationservo = hardwareMap.servo.get("servo1");
        capper = hardwareMap.servo.get("capper");
        gripper1.setPosition(0.67);
        gripper2.setPosition(0.00);
        capper.setPosition(capper_closed);
        // Rotationservo.setPosition(0.49);

        //G1servoPosition = 0.45;
        //gripper1.setPosition(G1servoPosition);
        //G2servoPosition = 1.0;
        //  gripper2.setPosition(G2servoPosition);



        leftdrive.setDirection(DcMotorSimple.Direction.REVERSE);

        // Initialize the hardware variables. Note that the strings used here as parameters
        // to 'get' must correspond to the names assigned during the robot configuration
        // step (using the FTC Robot Controller app on the phone).

        waitForStart();
        runtime .reset();

        // run until the end of the match (driver presses STOP)
        while (opModeIsActive()) {
            telemetry.addData("Status", "Run Time: " + runtime.toString());
            telemetry.update();

            leftdrive.setPower(gamepad1.right_stick_y);
            rightdrive.setPower(gamepad1.left_stick_y);
            centerMotor.setPower(-gamepad1.right_stick_x);
            //testing continuous rotation servo
            //1 = clockwise -full power
            //0 = counter-clockwise - full power
            //0.5 - stop
            if (this.gamepad2.left_bumper) {
                Rotationservo.setPosition(1);
            } else if (this.gamepad2.right_bumper) {
                Rotationservo.setPosition(0);
            } else {
                Rotationservo.setPosition(0.5);
            }



            // run until the end of the match (driver presses STOP)
            double tgtPower = 0;
            //while (opModeIsActive()) {
                tgtPower = -this.gamepad2.left_stick_y;
                // check to see if we need to move the servo.
                if(gamepad2.y) {
                    // move to 0 degrees.
                    // minimum
                    gripper1.setPosition(Gripper1_Open);
                    gripper2.setPosition(Gripper2_Open);
                    //} else if (gamepad2.x || gamepad2.b) {
                    // move to 90 degrees.
                    //  gripper1.setPosition(0.5);
                    //  gripper2.setPosition(0.5);
                } else if (gamepad2.a) {
                    // move to 180 degrees.
                    // maximum
                    gripper1.setPosition(Gripper1_Closed);
                    gripper2.setPosition(Gripper2_Closed);
                }
                telemetry.addData("Servo Position", gripper1.getPosition());
                telemetry.addData("Servo Position", gripper2.getPosition());
                telemetry.addData("Target Power", tgtPower);
                telemetry.addData("Status", "Running");
                telemetry.update();
            if(gamepad2.x) {
                capper.setPosition(capper_open);
            } else if (gamepad2.b) {
                capper.setPosition(capper_closed);
            }
            telemetry.addData("Servo Position", capper.getPosition());
            telemetry.addData("Target Power", tgtPower);
            telemetry.addData("Status", "Running");
            telemetry.update();


            if(gamepad1.a)
            {
                    leftdrive.setPower(0.25);
                    rightdrive.setPower(0.25);
                    centerMotor.setPower(0.25);
            }
                else
            {
                    leftdrive.setPower(0.0);
                    rightdrive.setPower(0.0);
                    centerMotor.setPower(0.0);
            }

            }

        }
    }
